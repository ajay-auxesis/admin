{
  "_args": [
    [
      {
        "raw": "angular2-infinite-scroll",
        "scope": null,
        "escapedName": "angular2-infinite-scroll",
        "name": "angular2-infinite-scroll",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "D:\\projects\\project\\ng2project"
    ]
  ],
  "_from": "angular2-infinite-scroll@latest",
  "_id": "angular2-infinite-scroll@0.3.5",
  "_inCache": true,
  "_location": "/angular2-infinite-scroll",
  "_nodeVersion": "6.9.1",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/angular2-infinite-scroll-0.3.5.tgz_1493131087052_0.15716593177057803"
  },
  "_npmUser": {
    "name": "orizens",
    "email": "farhioren@gmail.com"
  },
  "_npmVersion": "3.10.8",
  "_phantomChildren": {},
  "_requested": {
    "raw": "angular2-infinite-scroll",
    "scope": null,
    "escapedName": "angular2-infinite-scroll",
    "name": "angular2-infinite-scroll",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/angular2-infinite-scroll/-/angular2-infinite-scroll-0.3.5.tgz",
  "_shasum": "c2943511c75b76ffc448f60ec39505d027c14d9f",
  "_shrinkwrap": null,
  "_spec": "angular2-infinite-scroll",
  "_where": "D:\\projects\\project\\ng2project",
  "author": {
    "name": "Oren Farhi"
  },
  "bugs": {
    "url": "https://github.com/orizens/angular2-infinite-scroll/issues"
  },
  "dependencies": {},
  "description": "An infinite scroll directive for angular2",
  "devDependencies": {
    "@angular/common": "2.3.1",
    "@angular/compiler": "2.3.1",
    "@angular/compiler-cli": "2.3.1",
    "@angular/core": "2.3.1",
    "@angular/platform-browser": "2.3.1",
    "@angular/platform-browser-dynamic": "2.3.1",
    "@types/core-js": "0.9.32",
    "@types/jasmine": "2.2.33",
    "@types/node": "6.0.38",
    "autodts": "0.0.6",
    "awesome-typescript-loader": "2.2.4",
    "es6-promise": "3.0.2",
    "es6-shim": "0.33.3",
    "istanbul-instrumenter-loader": "^1.0.0",
    "jasmine-core": "2.4.1",
    "karma": "^0.13.22",
    "karma-chrome-launcher": "^1.0.1",
    "karma-cli": "^1.0.0",
    "karma-jasmine": "^1.0.2",
    "karma-mocha-reporter": "2.0.4",
    "karma-phantomjs-launcher": "1.0.0",
    "karma-sourcemap-loader": "^0.3.7",
    "karma-webpack": "^1.8.0",
    "lite-server": "2.2.0",
    "path": "^0.12.7",
    "phantomjs-prebuilt": "^2.1.7",
    "reflect-metadata": "0.1.2",
    "rimraf": "2.5.2",
    "rxjs": "5.0.2",
    "source-map-loader": "^0.1.5",
    "systemjs": "0.19.31",
    "systemjs-builder": "^0.15.16",
    "ts-helpers": "^1.1.1",
    "tslint": "^3.15.1",
    "tslint-loader": "^2.1.5",
    "typescript": "2.0.3",
    "webpack": "2.1.0-beta.21",
    "zone.js": "^0.6.17"
  },
  "directories": {},
  "dist": {
    "shasum": "c2943511c75b76ffc448f60ec39505d027c14d9f",
    "tarball": "https://registry.npmjs.org/angular2-infinite-scroll/-/angular2-infinite-scroll-0.3.5.tgz"
  },
  "gitHead": "2851b75bc811757abd9aae2edf7ff7642f4e9a32",
  "homepage": "https://github.com/orizens/angular2-infinite-scroll#readme",
  "keywords": [
    "angular2",
    "scroll",
    "infinite"
  ],
  "license": "MIT",
  "main": "angular2-infinite-scroll.js",
  "maintainers": [
    {
      "name": "orizens",
      "email": "farhioren@gmail.com"
    }
  ],
  "name": "angular2-infinite-scroll",
  "optionalDependencies": {},
  "readme": "[![Build Status](https://travis-ci.org/orizens/angular2-infinite-scroll.svg?branch=master)](https://travis-ci.org/orizens/angular2-infinite-scroll)\n\n# DEPRECATED - Please Use The New NGX-Infinite-Scroll\n[ngx-infinite-scroll](http://github.com/orizens/ngx-infinite-scroll)\n\n# Angular Infinite Scroll\nInspired by [ng-infinite-scroll](https://github.com/sroze/ngInfiniteScroll) directive for angular (> 2).\n\n## Angular Support\nSupports in Angular **> +2, 4**\n\n## Angular Consulting Services\nI'm a Senior Javascript Engineer & A Front End Consultant at [Orizens](http://orizens.com).\nMy services include:  \n- consulting to companies and startups on how to approach code in their projects and keep it maintainable.  \n- I provide project bootstrapping and development - while afterwards, I integrate it on site and guide the team on it.  \n\n[Contact Me Here](http://orizens.com/contact)\n\n## Installation\n```\nnpm install angular2-infinite-scroll --save\n```\n\n## Supported API\nCurrently supported attributes:\n* **infiniteScrollDistance**<_number_> - (optional, default: **2**) - should get a number, the number of viewport lenghts from the bottom of the page at which the event will be triggered.\n* **infiniteScrollUpDistance**<_number_> - (optional, default: **1.5**) - should get a number\n* **infiniteScrollThrottle**<_number_> - (optional, default: **300**) - should get a number of **milliseconds** for throttle. The event will be triggered this many milliseconds after the user *stops* scrolling.\n* **infiniteScrollContainer**<_string|HTMLElement_> - (optional, default: null) - should get a html element or css selector for a scrollable element; window or current element will be used if this attribute is empty.\n* **scrolled**<_function_> - this will callback if the distance threshold has been reached on a scroll down.\n* **scrolledUp**<_function_> - (event: InfiniteScrollEvent) - this will callback if the distance threshold has been reached on a scroll up.\n* **scrollWindow**<_boolean_> - (optional, default: **true**) - listens to the window scroll instead of the actual element scroll. this allows to invoke a callback function in the scope of the element while listenning to the window scroll.\n* **immediateCheck**<_boolean_> - (optional, default: **false**) - invokes the handler immediately to check if a scroll event has been already triggred when the page has been loaded (i.e. - when you refresh a page that has been scrolled).\n* **infiniteScrollDisabled**<_boolean_> - (optional, default: **false**) - doesn't invoke the handler if set to true\n\n## Behavior\nBy default, the directive listens to the **window scroll** event and invoked the callback.  \n**To trigger the callback when the actual element is scrolled**, these settings should be configured:\n* [scrollWindow]=\"false\"\n* set an explict css \"height\" value to the element\n\n## DEMO\n- [**Default Scroll** By Window - plunkr](https://plnkr.co/edit/DrEDetYnZkFxR7OWWrxS?p=preview) \n- [Scroll On a **\"Modal\"** - plunkr](https://plnkr.co/edit/QnQOwE9SEapwJCCFII3L?p=preview)\n\n## Usage\nFirst, import the InfiniteScrollModule to your module:\n\n```typescript\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { InfiniteScrollModule } from 'angular2-infinite-scroll';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { AppComponent } from './app';\n\n@NgModule({\n  imports:[ BrowserModule, InfiniteScrollModule ],\n  declarations: [ AppComponent, ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule { }\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n```\n\nIn this example, the **onScroll** callback will be invoked when the window is scrolled down:\n\n```typescript\nimport { Component } from '@angular/core';\n\n@Component({\n\tselector: 'app',\n\ttemplate: `\n\t\t<div class=\"search-results\"\n\t\t    infinite-scroll\n\t\t    [infiniteScrollDistance]=\"2\"\n\t\t    [infiniteScrollThrottle]=\"300\"\n\t\t    (scrolled)=\"onScroll()\">\n\t\t</div>\n\t`\n})\nexport class AppComponent {\n\tonScroll () {\n\t    console.log('scrolled!!')\n\t}\n}\n```\nin this example, whenever the \"search-results\" is scrolled, the callback will be invoked:\n\n```typescript\nimport { Component } from '@angular/core';\n\n@Component({\n\tselector: 'app',\n\tstyles: [\n\t\t`.search-results {\n\t\t\theight: 20rem;\n\t\t\toverflow: scroll;\n\t\t}`\n\t],\n\ttemplate: `\n\t\t<div class=\"search-results\"\n\t\t    infinite-scroll\n\t\t    [infiniteScrollDistance]=\"2\"\n\t\t    [infiniteScrollThrottle]=\"500\"\n\t\t    (scrolled)=\"onScroll()\"\n\t\t    [scrollWindow]=\"false\">\n\t\t</div>\n\t`\n})\nexport class AppComponent {\n\tonScroll () {\n\t    console.log('scrolled!!')\n\t}\n}\n```\n\nIn this example, the **onScrollDown** callback will be invoked when the window is scrolled down and the **onScrollUp** callback will be invoked when the window is scrolled up:\n\n```typescript\nimport { Component } from '@angular/core';\nimport { InfiniteScroll } from 'angular2-infinite-scroll';\n\n@Component({\n\tselector: 'app',\n\tdirectives: [ InfiniteScroll ],\n\ttemplate: `\n\t\t<div class=\"search-results\"\n\t\t    infinite-scroll\n\t\t    [infiniteScrollDistance]=\"2\"\n\t\t    [infiniteScrollUpDistance]=\"1.5\"\n\t\t    [infiniteScrollThrottle]=\"500\"\n\t\t    (scrolled)=\"onScrollDown()\"\n\t\t    (scrolledUp)=\"onScrollUp()\">\n\t\t</div>\n\t`\n})\nexport class AppComponent {\n\tonScrollDown () {\n\t    console.log('scrolled down!!')\n\t}\n\n\tonScrollUp () {\n    \tconsole.log('scrolled up!!')\n    }\n}\n```\n\n# Showcase Examples\n* [Echoes Player Ng2 Version](http://orizens.github.io/echoes-ng2) ([github repo for echoes player](http://github.com/orizens/echoes-ng2))\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/orizens/angular2-infinite-scroll.git"
  },
  "scripts": {
    "bdd": "NODE_ENV='bdd' karma start karma.conf.js",
    "build:test": "tsc --project ./src",
    "clean": "npm run clean:jsfiles && npm run clean:typefiles && npm run clean:metadata",
    "clean:jsfiles": "rimraf src/*.js && rimraf ./*scroll.js",
    "clean:metadata": "rimraf ./*metadata.json && rimraf src/ngfactory && rimraf ./src/*.metadata.json",
    "clean:node": "rimraf node_modules",
    "clean:typefiles": "rimraf src/*.d.ts && rimraf ./*scroll.d.ts",
    "lite": "lite-server",
    "postversion": "git push origin master",
    "prepublish": "node ./node_modules/@angular/compiler-cli/src/main.js && node make.js",
    "pretest": "npm run clean",
    "preversion": "npm run clean && npm run prepublish && npm test",
    "setup": "npm run typings -- install",
    "start": "npm run build && npm run lite",
    "test": "karma start karma.conf.js",
    "version": "git add ./",
    "watch": "tsc --project ./src --watch"
  },
  "typings": "./angular2-infinite-scroll.d.ts",
  "version": "0.3.5"
}
